variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  majorVersion: 0
  minorVersion: 1
  patchVersion: 0
  version: $[format('{0}.{1}.{2}', variables.majorVersion, variables.minorVersion, variables.patchVersion)]
  agentPool: Enterspeed-Production
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    release: true
    # Versioning: 1.0.0
    semVersion: $[format('{0}', variables.version)]
    buildName: $[format('{0}', variables.semVersion)]
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
    # Versioning: 1.0.0-develop.123
    release: false
    semVersionBase: $[format('{0}-develop', variables.version)]
    semVersionRev: $[counter(variables.semVersionBase, 0)]
    semVersion: $[format('{0}.{1}', variables.semVersionBase, variables.semVersionRev)]
    buildName: $[format('Develop - {0}', variables.semVersion)]
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/release/') }}:
    # Versioning: 1.0.0-alpha.branch.123
    release: true
    semVersionBase: $[format('{0}-alpha.{1}', variables.version, variables['Build.SourceBranchName'])]
    semVersionRev: $[counter(variables.semVersionBase, 0)]
    semVersion: $[format('{0}.{1}', variables.semVersionBase, variables.semVersionRev)]
    buildName: $[format('Release - {0}', variables.semVersion)]
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/') }}:
    # Versioning: 1.0.0-feature.branch.123
    release: false
    semVersionBase: $[format('{0}-feature.{1}', variables.version, variables['Build.SourceBranchName'])]
    semVersionRev: $[counter(variables.semVersionBase, 0)]
    semVersion: $[format('{0}.{1}', variables.semVersionBase, variables.semVersionRev)]
    buildName: $[format('Feature - {0}', variables.semVersion)]
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}: # Pull requests
    # Versioning: 1.0.0-pr.1.123
    release: false
    semVersionBase: $[format('{0}-pr.{1}', variables.version, variables['System.PullRequest.PullRequestId'])]
    semVersionRev: $[counter(variables.semVersionBase, 0)]
    semVersion: $[format('{0}.{1}', variables.semVersionBase, variables.semVersionRev)]
    buildName: $[format('Pull Request - {0}', variables.semVersion)]

name: $(BuildID) - $(buildName)

trigger:
  branches:
    include:
      - master
      - release/*
  paths:
    exclude:
      - README.md
      - CHANGELOG.md
   
pr:
  branches:
    include:
      - master
      - release/*
  paths:
    exclude:
      - README.md
      - CHANGELOG.md

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: BuildPlatform
        displayName: Build Platform
        pool:
          name: '$(agentPool)'
          demands:
          - msbuild
          - visualstudio
        steps:
          # NuGet
          - task: NuGetToolInstaller@1
            displayName: NuGet install
            inputs:
              versionSpec: 4.8.1
          - task: NuGetCommand@2
            displayName: NuGet restore
            inputs:
              restoreSolution: '**\*.sln'
              feedsToUse: config
              nugetConfigPath: ./NuGet.Config
              restoreDirectory: ../lib/packages

          # Build solution
          - task: VSBuild@1
            displayName: Build solution
            inputs:
              solution: ./Enterspeed.Sdk.sln
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)\\" /p:AutoParameterizationWebConfigConnectionStrings=false /p:MarkWebConfigAssistFilesAsExclude=false /p:IncludeSetAclProviderOnDestination=False'
              platform: Any CPU
              configuration: Release
              maximumCpuCount: true

          # Publish artifacts
          - task: PublishSymbols@2
            displayName: Publish symbols
            inputs:
              SearchPattern: '**\bin\**\*.pdb'
              PublishSymbols: false

          - task: PublishBuildArtifacts@1
            displayName: Publish artifact - platform
            inputs:
              ArtifactName: platform